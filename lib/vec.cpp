/* **************************************************************************************************** */

#include "../headers/vec.hpp"

/* **************************************************************************************************** */

mage::vec3::vec3(){
    x = 0;
    y = 0;
    z = 0;
}

mage::vec3::vec3(const real a, const real b, const real c){
    x = a;
    y = b;
    z = c;
}

/* **************************************************************************************************** */

void mage::vec3::invert(){
    x = -x;
    y = -y;
    z = -z;
}

/* **************************************************************************************************** */

real mage::vec3::magnitude(){
    return rsqrt(x*x + y*y + z*z);
}

/* **************************************************************************************************** */

real mage::vec3::squareMagnitude(){
    return x*x + y*y + z*z;
}

/* **************************************************************************************************** */

void mage::vec3::normalize(){
    real l = magnitude();

    if(l > 0)
        (*this) *= ((real)1)/l;
}

/* **************************************************************************************************** */

void mage::vec3::operator*=(const real value){
    x *= value;
    y *= value;
    z *= value;
}

/* **************************************************************************************************** */

mage::vec3 mage::vec3::operator*(const real value) const {
    return mage::vec3(x*value, y*value, z*value);
}

/* **************************************************************************************************** */